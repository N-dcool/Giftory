{"version":3,"file":"subtitle.esm.js","sources":["../src/filter.ts","../src/utils.ts","../src/formatTimestamp.ts","../src/map.ts","../src/Parser.ts","../src/parse.ts","../src/parseSync.ts","../src/parseTimestamp.ts","../src/parseTimestamps.ts","../src/resync.ts","../src/Formatter.ts","../src/stringify.ts","../src/stringifySync.ts"],"sourcesContent":["import { Node } from '.'\nimport { Transform } from 'stream'\n\nexport const filter = (callback: (node: Node) => boolean) =>\n  new Transform({\n    objectMode: true,\n    autoDestroy: false,\n    transform: function transform(chunk, _encoding, next) {\n      callback(chunk) ? next(null, chunk) : next()\n    }\n  })\n","import { Duplex, DuplexOptions } from 'stream'\n\nexport const padLeft = (value: number, length = 2): string =>\n  value.toString().padStart(length, '0')\n\nexport const createDuplex = (options: DuplexOptions) =>\n  new Duplex({\n    objectMode: true,\n    autoDestroy: false,\n    read() {},\n    ...options\n  })\n","import { padLeft } from './utils'\nimport { FormatOptions } from '.'\n\nexport function formatTimestamp(\n  timestamp: number,\n  options: FormatOptions = { format: 'SRT' }\n) {\n  const date = new Date(0, 0, 0, 0, 0, 0, timestamp)\n\n  const hours = date.getHours()\n  const minutes = date.getMinutes()\n  const seconds = date.getSeconds()\n  const ms = Math.floor(\n    timestamp - (hours * 3600000 + minutes * 60000 + seconds * 1000)\n  )\n\n  return `${padLeft(hours)}:${padLeft(minutes)}:${padLeft(seconds)}${\n    options.format === 'WebVTT' ? '.' : ','\n  }${padLeft(ms, 3)}`\n}\n","import { Transform } from 'stream'\nimport { Node } from '.'\n\nexport const map = (mapper: (node: Node, index: number) => any) => {\n  let index = 0\n\n  return new Transform({\n    objectMode: true,\n    autoDestroy: false,\n    transform(chunk: Node, _encoding, callback) {\n      callback(null, mapper(chunk, index++))\n    }\n  })\n}\n","import stripBom from 'strip-bom'\nimport { Node, RE_TIMESTAMP, parseTimestamps } from '.'\n\nexport type Pusher = (node: Node) => void\n\nexport interface ParseState {\n  expect: 'header' | 'id' | 'timestamp' | 'text' | 'vtt_comment'\n  row: number\n  hasContentStarted: boolean\n  isWebVTT: boolean\n  node: Partial<Node>\n  buffer: string[]\n}\n\nexport class Parser {\n  private push: Pusher\n  private state: ParseState\n\n  constructor({ push }: { push: Pusher }) {\n    this.push = push\n    this.state = {\n      expect: 'header',\n      row: 0,\n      hasContentStarted: false,\n      isWebVTT: false,\n      node: {},\n      buffer: []\n    }\n  }\n\n  private isIndex(line: string): boolean {\n    return /^\\d+$/.test(line.trim())\n  }\n\n  private isTimestamp(line: string): boolean {\n    return RE_TIMESTAMP.test(line)\n  }\n\n  private isVttComment(line: string): boolean {\n    return /^NOTE/.test(line)\n  }\n\n  private getError(expected: string, index: number, row: string): Error {\n    return new Error(\n      `expected ${expected} at row ${index + 1}, but received: \"${row}\"`\n    )\n  }\n\n  public parseLine(line: string): void {\n    const contents = this.state.row === 0 ? stripBom(line) : line\n\n    if (!this.state.hasContentStarted) {\n      if (contents.trim()) {\n        this.state.hasContentStarted = true\n      } else {\n        return\n      }\n    }\n\n    const parse = {\n      header: this.parseHeader,\n      id: this.parseId,\n      timestamp: this.parseTimestamp,\n      text: this.parseText,\n      vtt_comment: this.parseVttComment\n    }[this.state.expect]\n\n    parse.call(this, contents)\n\n    this.state.row++\n  }\n\n  public flush(): void {\n    if (this.state.buffer.length > 0) {\n      this.pushNode()\n    }\n  }\n\n  private parseHeader(line: string) {\n    if (!this.state.isWebVTT) {\n      this.state.isWebVTT = /^WEBVTT/.test(line)\n\n      if (this.state.isWebVTT) {\n        this.state.node.type = 'header'\n      } else {\n        this.parseId(line)\n        return\n      }\n    }\n\n    this.state.buffer.push(line)\n\n    if (!line) {\n      this.state.expect = 'id'\n      return\n    }\n  }\n\n  private parseId(line: string) {\n    this.state.expect = 'timestamp'\n\n    if (this.state.node.type === 'header') {\n      this.pushNode()\n    }\n\n    if (this.isIndex(line)) return\n\n    if (this.state.isWebVTT && this.isVttComment(line)) {\n      this.state.expect = 'vtt_comment'\n      return\n    }\n\n    this.parseTimestamp(line)\n  }\n\n  private parseVttComment(line: string) {\n    this.state.expect = 'vtt_comment'\n\n    if (line.trim() === '') {\n      this.state.expect = 'id'\n    }\n  }\n\n  private parseTimestamp(line: string) {\n    if (!this.isTimestamp(line)) {\n      throw this.getError('timestamp', this.state.row, line)\n    }\n\n    this.state.node = {\n      type: 'cue',\n      data: {\n        ...parseTimestamps(line),\n        text: ''\n      }\n    }\n\n    this.state.expect = 'text'\n  }\n\n  private parseText(line: string) {\n    if (this.state.buffer.length === 0) {\n      this.state.buffer.push(line)\n      return\n    }\n\n    if (this.isTimestamp(line)) {\n      const lastIndex = this.state.buffer.length - 1\n\n      if (this.isIndex(this.state.buffer[lastIndex])) {\n        this.state.buffer.pop()\n      }\n\n      this.pushNode()\n      this.parseTimestamp(line)\n      return\n    }\n\n    if (this.isVttComment(line)) {\n      this.pushNode()\n      this.parseVttComment(line)\n      return\n    }\n\n    this.state.buffer.push(line)\n  }\n\n  private pushNode(): void {\n    if (this.state.node.type === 'cue') {\n      while (true) {\n        const lastItem = this.state.buffer[this.state.buffer.length - 1]\n        if (['', '\\n'].includes(lastItem)) {\n          this.state.buffer.pop()\n        } else {\n          break\n        }\n      }\n\n      while (true) {\n        const firstItem = this.state.buffer[0]\n        if (['', '\\n'].includes(firstItem)) {\n          this.state.buffer.shift()\n        } else {\n          break\n        }\n      }\n\n      this.state.node.data!.text = this.state.buffer.join('\\n')\n    }\n\n    if (this.state.node.type === 'header') {\n      this.state.node.data = this.state.buffer.join('\\n').trim()\n    }\n\n    this.push(this.state.node as Node)\n\n    this.state.node = {}\n    this.state.buffer = []\n  }\n}\n","import multipipe from 'multipipe'\nimport split2 from 'split2'\nimport { createDuplex } from './utils'\nimport { Parser } from './Parser'\n\nexport const parse = () => {\n  const parser = new Parser({\n    push: node => outputStream.push(node)\n  })\n\n  const stream = createDuplex({\n    write(chunk, _encoding, next) {\n      try {\n        parser.parseLine(chunk.toString())\n      } catch (err) {\n        return next(err)\n      }\n\n      next()\n    }\n  })\n\n  const splitStream = split2()\n\n  splitStream.on('finish', () => {\n    parser.flush()\n    stream.push(null)\n  })\n\n  const outputStream = multipipe(splitStream, stream, {\n    objectMode: true\n  })\n\n  return outputStream\n}\n","import { Parser } from './Parser'\nimport { NodeList } from '.'\n\nexport const parseSync = (input: string): NodeList => {\n  const buffer: NodeList = []\n  const parser = new Parser({\n    push: node => buffer.push(node)\n  })\n\n  input\n    .replace(/\\r\\n/g, '\\n')\n    .split('\\n')\n    .forEach(line => parser.parseLine(line))\n\n  parser.flush()\n\n  return buffer\n}\n","export function parseTimestamp(timestamp: string): number {\n  const match = timestamp.match(\n    /^(?:(\\d{1,}):)?(\\d{1,2}):(\\d{1,2})[,.](\\d{1,3})$/\n  )\n\n  if (!match) {\n    throw new Error('Invalid SRT or VTT time format: \"' + timestamp + '\"')\n  }\n\n  const hours = match[1] ? parseInt(match[1], 10) * 3600000 : 0\n  const minutes = parseInt(match[2], 10) * 60000\n  const seconds = parseInt(match[3], 10) * 1000\n  const milliseconds = parseInt(match[4], 10)\n\n  return hours + minutes + seconds + milliseconds\n}\n","import { parseTimestamp, Timestamp } from '.'\n\nexport const RE_TIMESTAMP = /^((?:\\d{1,}:)?\\d{1,2}:\\d{1,2}[,.]\\d{1,3}) --> ((?:\\d{1,}:)?\\d{1,2}:\\d{1,2}[,.]\\d{1,3})(?: (.*))?$/\n\nexport function parseTimestamps(value: string): Timestamp {\n  const match = RE_TIMESTAMP.exec(value)\n\n  if (!match) {\n    throw new Error('Invalid timestamp format')\n  }\n\n  const timestamp: Timestamp = {\n    start: parseTimestamp(match[1]),\n    end: parseTimestamp(match[2])\n  }\n\n  if (match[3]) {\n    timestamp.settings = match[3]\n  }\n\n  return timestamp\n}\n","import { map, Node } from '.'\n\nexport const resync = (time: number) =>\n  map((node: Node) => {\n    if (node.type === 'cue') {\n      return {\n        ...node,\n        data: {\n          ...node.data,\n          start: node.data.start + time,\n          end: node.data.end + time\n        }\n      }\n    }\n\n    return node\n  })\n","import { FormatOptions, Node, Cue, formatTimestamp } from '.'\n\nexport class Formatter {\n  private options: FormatOptions\n  private isVTT: boolean\n  private hasReceivedHeader: boolean\n  private index: number\n\n  constructor(options: FormatOptions) {\n    this.options = options\n    this.hasReceivedHeader = false\n    this.isVTT = options.format === 'WebVTT'\n    this.index = 1\n  }\n\n  public format(node: Node): string {\n    let buffer = ''\n\n    if (node.type === 'header' && this.isVTT) {\n      this.hasReceivedHeader = true\n      buffer += `${node.data}\\n\\n`\n    }\n\n    if (node.type === 'cue') {\n      if (!this.hasReceivedHeader && this.isVTT) {\n        this.hasReceivedHeader = true\n        buffer += 'WEBVTT\\n\\n'\n      }\n\n      buffer += this.formatCue(node.data, this.index++, this.options)\n    }\n\n    return buffer\n  }\n\n  private formatCue(cue: Cue, index: number, options: FormatOptions) {\n    return [\n      `${index > 1 ? '\\n' : ''}${index}`,\n      `${formatTimestamp(cue.start, options)} --> ${formatTimestamp(\n        cue.end,\n        options\n      )}${\n        options.format === 'WebVTT' && cue.settings ? ' ' + cue.settings : ''\n      }`,\n      cue.text,\n      ''\n    ].join('\\n')\n  }\n}\n","import { map, FormatOptions, Node } from '.'\nimport { Formatter } from './Formatter'\n\nexport const stringify = (options: FormatOptions) => {\n  const formatter = new Formatter(options)\n  return map((chunk: Node) => formatter.format(chunk))\n}\n","import { NodeList, FormatOptions } from '.'\nimport { Formatter } from './Formatter'\n\nexport const stringifySync = (\n  list: NodeList,\n  options: FormatOptions\n): string => {\n  const formatter = new Formatter(options)\n\n  return list.reduce((buffer, node) => {\n    return buffer + formatter.format(node)\n  }, '')\n}\n"],"names":["filter","callback","Transform","objectMode","autoDestroy","transform","chunk","_encoding","next","padLeft","value","length","toString","padStart","createDuplex","options","Duplex","read","formatTimestamp","timestamp","format","date","Date","hours","getHours","minutes","getMinutes","seconds","getSeconds","ms","Math","floor","map","mapper","index","Parser","push","state","expect","row","hasContentStarted","isWebVTT","node","buffer","isIndex","line","test","trim","isTimestamp","RE_TIMESTAMP","isVttComment","getError","expected","Error","parseLine","contents","stripBom","parse","header","parseHeader","id","parseId","parseTimestamp","text","parseText","vtt_comment","parseVttComment","call","flush","pushNode","type","data","parseTimestamps","lastIndex","pop","lastItem","includes","firstItem","shift","join","parser","outputStream","stream","write","err","splitStream","split2","on","multipipe","parseSync","input","replace","split","forEach","match","parseInt","milliseconds","exec","start","end","settings","resync","time","Formatter","hasReceivedHeader","isVTT","formatCue","cue","stringify","formatter","stringifySync","list","reduce"],"mappings":"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"}